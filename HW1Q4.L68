00000400 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 4/10/2021 8:38:17 PM

00000000                             1  ; ========================================================================
00000000                             2  ; Beginning of EQUates section, just like #define in C
00000000                             3  ; ========================================================================
00000000                             4  
00000000  =00004000                  5  addr1:   EQU  $4000
00000000  =00004001                  6  addr2:   EQU  $4001 
00000000  =0000A7FF                  7  data2:   EQU  $A7FF
00000000  =00005555                  8  data3:   EQU  $5555
00000000  =00000000                  9  data4:   EQU  $0000 
00000000  =00001246                 10  data5:   EQU  4678 
00000000  =0000004F                 11  data6:   EQU  %01001111 
00000000  =00000017                 12  data7:   EQU  %00010111 
00000000                            13  
00000000                            14  ; ========================================================================
00000000                            15  ; Beginning of code segment
00000000                            16  ; ========================================================================
00000400                            17          ORG  $400             ; directive tells assembler where program
00000400                            18                                ; is loaded in memory
00000400  303C A7FF                 19  main:   MOVE.W    #data2,D0   ; load D0 
00000404  123C 004F                 20          MOVE.B    #data6,D1   ; load D1 
00000408  143C 0017                 21          MOVE.B    #data7,D2   ; load D2 
0000040C  363C 5555                 22          MOVE.W    #data3,D3   ; load D3 
00000410  307C 4000                 23          MOVEA.W   #addr1,A0   ; load address register 
00000414  10C1                      24          MOVE.B    D1,(A0)+    ; store byte to memory 
00000416  10C2                      25          MOVE.B    D2,(A0)+    ; store second byte
00000418  327C 4000                 26          MOVEA.W   #addr1,A1   ; load address 
0000041C  C751                      27          AND.W     D3,(A1)     ; logical AND
0000041E                            28   
0000041E                            29          ; Next instruction shows how a label is used
0000041E                            30   
0000041E  4EF8 0400                 31          JMP       main        ; forever loop!
00000422                            32          
00000422                            33          END       main        ; directive tells assembler where to

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDR1               4000
ADDR2               4001
DATA2               A7FF
DATA3               5555
DATA4               0
DATA5               1246
DATA6               4F
DATA7               17
MAIN                400
