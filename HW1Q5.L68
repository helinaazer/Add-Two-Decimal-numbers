00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 4/12/2021 7:48:17 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : HW1 Question 5 Part 3
00000000                             3  * Written by : Helina Azer
00000000                             4  * Date       : 4/10/2021
00000000                             5  * Description: Program to add the two numbers with the address stored at address $6000
00000000                             6  *-----------------------------------------------------------
00000000                             7  ; ========================================================================
00000000                             8  ; Beginning of code segment
00000000                             9  ; ========================================================================
00001000                            10      ORG    $1000
00001000                            11  START:                          ; first instruction of program
00001000                            12      
00001000  43F9 00001069             13      LEA FIRSTNUMBER, A1         ; first message prompt
00001006  103C 000E                 14      MOVE.B  #14, D0             ; Load trap task to print
0000100A  4E4F                      15      TRAP    #15                 ; call trap
0000100C                            16      
0000100C  103C 0004                 17      MOVE.B  #4, D0              ; Trap task that reads the first number inputed by user
00001010  4E4F                      18      TRAP    #15                 ; call trap
00001012  3401                      19      MOVE.W  D1, D2              ; Move D1 into D2 (move the number entered by user to D2)
00001014                            20      
00001014  43F9 0000109F             21      LEA SECONDNUMBER, A1        ; second message prompt
0000101A  103C 000E                 22      MOVE.B  #14, D0             ; Load trap tast to print
0000101E  4E4F                      23      TRAP    #15                 ; call trap
00001020                            24      
00001020  103C 0004                 25      MOVE.B  #4, D0              ; Trap task that reads the second number inputed by user
00001024  4E4F                      26      TRAP    #15                 ; call trap
00001026                            27          
00001026  3601                      28      MOVE.W  D1, D3              ; move the second input (D1) into D3
00001028  D443                      29      ADD.W   D3, D2              ; add the first and second numbers entered by the user
0000102A  680C                      30      BVC.S   CHECKFOROVERFLOW    ; check for overflow
0000102C                            31      
0000102C  43F9 00001058             32      LEA     ERRORMESSAGE, A1    ; load message into A1
00001032  103C 000E                 33      MOVE.B  #14, D0             ; trap task to print overflow
00001036  4E4F                      34      TRAP    #15                 ; call trap
00001038                            35      
00001038                            36  CHECKFOROVERFLOW:
00001038  31C2 6000                 37      MOVE.W  D2, $6000           ; store at address $6000
0000103C  43F9 000010D6             38      LEA     ANSWER, A1          
00001042  103C 000E                 39      MOVE.B  #14, D0             ; call trap tast to print the answer
00001046  4E4F                      40      TRAP    #15                 ; call trap
00001048                            41      
00001048  4281                      42      CLR.L   D1                  ; clear
0000104A  3202                      43      MOVE.W  D2,D1               ; move D2 into D1
0000104C  48C1                      44      EXT.L   D1                  ; extend number
0000104E  103C 0003                 45      MOVE.B  #3, D0              ; print signed number
00001052  4E4F                      46      TRAP    #15                 ; call trap
00001054                            47      
00001054  FFFF FFFF                 48      SIMHALT                     ; Halt simulator
00001058                            49  * Put variables and constants here
00001058                            50  
00001058= 4F 76 65 72 66 6C ...     51  ERRORMESSAGE      DC.B    'Overflow Occured', 0
00001069= 45 6E 74 65 72 20 ...     52  FIRSTNUMBER       DC.B    'Enter the first number to add (hit enter when done): ', 0
0000109F= 45 6E 74 65 72 20 ...     53  SECONDNUMBER      DC.B    'Enter the second number to add (hit enter when done): ', 0
000010D6= 41 6E 73 77 65 72 ...     54  ANSWER            DC.B    'Answer: ', 0
000010DF                            55  
000010DF                            56      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ANSWER              10D6
CHECKFOROVERFLOW    1038
ERRORMESSAGE        1058
FIRSTNUMBER         1069
SECONDNUMBER        109F
START               1000
